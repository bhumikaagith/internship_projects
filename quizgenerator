#include <iostream>
#include <string>
using namespace std;

int Guess;
int Total = 0;  // Initialize the total score to 0

// Question Class
class Question {
private:
    string Question_Text;
    string Answer_1;
    string Answer_2;
    string Answer_3;
    string Answer_4;
    int Correct_Answer;
    int Question_Score;

public:
    // Setter Function
    void setValues(string, string, string, string, string, int, int);

    // Function to ask questions
    void askQuestion();
    string getCorrectAnswerText();
};

// Driver code
int main() {
    cout << "\n\n\t\t\t\tTHE DAILY QUIZ" << endl;
    cout << "\n Welcome to Manav Rachna Object Oriented Programming Quiz!"<<endl;
    cout<<"\n Press Enter to start the quiz... " << endl;

    // Input
    cin.get();

    string Name;
    int Age;

    // Input the details
    cout << "What is your Name?" << endl;
    cin >> Name;
    cout << endl;

    cout << "How old are you?" << endl;
    cin >> Age;
    cout << endl;

    string Respond;
    cout << "Are you ready to take the quiz " << Name << "? yes/no" << endl;
    cin >> Respond;

    if (Respond == "yes") {
        cout << endl;
        cout << "Good Luck!" << endl;
    }
    else {
        cout << "Okay Good Bye!" << endl;
        return 0;
    }

    // Objects of Question Class
    Question q1, q2, q3, q4, q5;

    // Setting values for the OOP-related questions
    q1.setValues("What keyword is used to define a class in C++?", "class", "struct", "function", "object", 1, 10);
    q2.setValues("What is used to create an object of a class in C++?", "new", "malloc", "create", "init", 1, 10);
    q3.setValues("What keyword is used to define a constant in a class?", "const", "static", "final", "immutable", 1, 10);
    q4.setValues("Which of the following is used for inheritance in C++?", "extends", "inherit", "super", ":", 4, 10);
    q5.setValues("What is the default access modifier for class members in C++?", "private", "public", "protected", "friend", 1, 10);

    // Ask the questions
    q1.askQuestion();
    q2.askQuestion();
    q3.askQuestion();
    q4.askQuestion();
    q5.askQuestion();

    // Display the total score
    cout << "Total Score = " << Total << " out of 50" << endl;

    // Display the results
    if (Total >= 35) {
        cout << "Congrats you passed the quiz!" << endl;
    }
    else {
        cout << "Alas! You failed the quiz." << endl;
        cout << "Better luck next time." << endl;
    }

    return 0;
}

// Function to set the values of the questions
void Question::setValues(
    string q, string a1, string a2,
    string a3, string a4, int ca, int pa)
{
    Question_Text = q;
    Answer_1 = a1;
    Answer_2 = a2;
    Answer_3 = a3;
    Answer_4 = a4;
    Correct_Answer = ca;
    Question_Score = pa;
}

// Function to ask questions
void Question::askQuestion() {
    cout << endl;
    cout << Question_Text << endl;
    cout << "1. " << Answer_1 << endl;
    cout << "2. " << Answer_2 << endl;
    cout << "3. " << Answer_3 << endl;
    cout << "4. " << Answer_4 << endl;
    cout << endl;

    cout << "What is your answer? (in number)" << endl;
    cin >> Guess;

    // Input validation for the guess
    while (Guess < 1 || Guess > 4) {
        cout << "Invalid input! Please enter a number between 1 and 4." << endl;
        cin >> Guess;
    }

    // If the answer is correct
    if (Guess == Correct_Answer) {
        cout << endl;
        cout << "Correct!" << endl;
        Total += Question_Score;  // Increase total score
        cout << "Score = " << Question_Score << " out of " << Question_Score << "!" << endl;
    }
    // Otherwise
    else {
        cout << endl;
        cout << "Wrong!" << endl;
        cout << "Score = 0 out of " << Question_Score << "!" << endl;
        cout << "Correct answer: " << getCorrectAnswerText() << "." << endl;
    }
}

// Function to return the text of the correct answer
string Question::getCorrectAnswerText() {
    switch (Correct_Answer) {
    case 1: return Answer_1;
    case 2: return Answer_2;
    case 3: return Answer_3;
    case 4: return Answer_4;
    default: return "";
    }
}
